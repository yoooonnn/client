{"ast":null,"code":"var _jsxFileName = \"/Users/yoon/Documents/React/authentication/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [inputKey, setInputKey] = useState('');\n  const [message, setMessage] = useState('');\n  const isValidHex = key => {\n    const hexPattern = /^[0-9a-fA-F]{64}$/; // 64자리의 16진수 패턴\n    return hexPattern.test(key);\n  };\n  const handleLogin = () => {\n    const storedPrivateKey = localStorage.getItem('privateKey');\n    if (!isValidHex(inputKey)) {\n      setMessage('Your key is incorrectly formatted');\n      return; // 형식이 잘못된 경우, 더 이상 진행하지 않음\n    }\n    if (inputKey === storedPrivateKey) {\n      setMessage('Login Completed');\n    } else {\n      setMessage('Login Failed');\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAC1C\\uC778 \\uD0A4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: inputKey,\n        onChange: e => setInputKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  };\n};\n_s(Login, \"yIzONPAOVlQQhPkGkczOeuEr45Y=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","inputKey","setInputKey","message","setMessage","isValidHex","key","hexPattern","test","handleLogin","storedPrivateKey","localStorage","getItem","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/yoon/Documents/React/authentication/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Login = () => {\n    const [inputKey, setInputKey] = useState('');\n    const [message, setMessage] = useState('');\n\n    const isValidHex = (key) => {\n        const hexPattern = /^[0-9a-fA-F]{64}$/;  // 64자리의 16진수 패턴\n        return hexPattern.test(key);\n      };\n\n    const handleLogin = () => {\n        const storedPrivateKey = localStorage.getItem('privateKey');\n\n        if (!isValidHex(inputKey)) {\n            setMessage('Your key is incorrectly formatted');\n            return; // 형식이 잘못된 경우, 더 이상 진행하지 않음\n          }\n        if (inputKey === storedPrivateKey) {\n            setMessage('Login Completed');\n        } else {\n            setMessage('Login Failed');\n        }\n\n        return (\n            <div className='login-container'>\n                <input \n                    type=\"text\"\n                    placeholder=\"개인 키를 입력하세요\"\n                    value={inputKey}\n                    onChange={(e) => setInputKey(e.target.value)}\n                />\n                <button onClick={handleLogin}>로그인</button>\n                \n                {message && <p>{message}</p>}\n            </div>\n        )\n    };\n}\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,UAAU,GAAIC,GAAG,IAAK;IACxB,MAAMC,UAAU,GAAG,mBAAmB,CAAC,CAAE;IACzC,OAAOA,UAAU,CAACC,IAAI,CAACF,GAAG,CAAC;EAC7B,CAAC;EAEH,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAE3D,IAAI,CAACP,UAAU,CAACJ,QAAQ,CAAC,EAAE;MACvBG,UAAU,CAAC,mCAAmC,CAAC;MAC/C,OAAO,CAAC;IACV;IACF,IAAIH,QAAQ,KAAKS,gBAAgB,EAAE;MAC/BN,UAAU,CAAC,iBAAiB,CAAC;IACjC,CAAC,MAAM;MACHA,UAAU,CAAC,cAAc,CAAC;IAC9B;IAEA,oBACIN,OAAA;MAAKe,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BhB,OAAA;QACIiB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,0DAAa;QACzBC,KAAK,EAAEhB,QAAS;QAChBiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACF1B,OAAA;QAAQ2B,OAAO,EAAEhB,WAAY;QAAAK,QAAA,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAEzCrB,OAAO,iBAAIL,OAAA;QAAAgB,QAAA,EAAIX;MAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAEd,CAAC;AACL,CAAC;AAAAxB,EAAA,CApCKD,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}